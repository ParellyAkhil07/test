
public class AnagramOfPalindrome {

    // Is the word an anagram of a palindrome?
    public static boolean isAnagramOfPalindrome(String word) {
        // Create a HashMap to count occurrences of each character
        HashMap<Character, Integer> wordDict = new HashMap<>();

        // Count each character in the word
        for (char l : word.toCharArray()) {
            wordDict.put(l, wordDict.getOrDefault(l, 0) + 1);
        }

        // Check the number of characters with odd occurrences
        int oddCount = 0;
        for (int count : wordDict.values()) {
            if (count % 2 != 0) {
                oddCount++;
            }
        }

        // If the word length is even, no odd occurrences are allowed
        // If the word length is odd, only one odd occurrence is allowed
        return oddCount <= 1;
    }

    public static void main(String[] args) {
        // Test cases
        System.out.println(isAnagramOfPalindrome("a")); // True
        System.out.println(isAnagramOfPalindrome("ab")); // False
        System.out.println(isAnagramOfPalindrome("aab")); // True
        System.out.println(isAnagramOfPalindrome("arceace")); // True
        System.out.println(isAnagramOfPalindrome("arceaceb")); // False

        // If all tests pass
        System.out.println("ALL TESTS PASSED!");
    }