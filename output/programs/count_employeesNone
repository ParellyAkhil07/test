
import java.util.ArrayList;
import java.util.List;

class Node {
    // Node in a tree
    private String name;
    private List<Node> children;

    // Constructor for Node
    public Node(String name, List<Node> children) {
        this.name = name;
        this.children = (children != null) ? children : new ArrayList<>();
    }

    // Method to count how many employees this person manages
    public int countEmployees() {
        // If there are no children, return 0
        if (children.isEmpty()) {
            return 0;
        }

        int count = 0;

        // Iterate over each child and count employees recursively
        for (Node child : children) {
            count += 1 + child.countEmployees();
        }

        return count;
    }

    // Main method to run tests
    public static void main(String[] args) {
        // Create nodes as per the example
        Node henri = new Node("Henri", null);
        Node nora = new Node("Nora", List.of(henri));
        Node nick = new Node("Nick", null);
        Node janet = new Node("Janet", List.of(nick, nora));
        Node al = new Node("Al", null);
        Node bob = new Node("Bob", null);
        Node jen = new Node("Jen", null);
        Node jessica = new Node("Jessica", List.of(al, bob, jen));
        Node jane = new Node("Jane", List.of(jessica, janet));

        // Test cases
        assert henri.countEmployees() == 0 : "Test failed for Henri";
        assert janet.countEmployees() == 3 : "Test failed for Janet";
        assert jessica.countEmployees() == 3 : "Test failed for Jessica";
        assert jane.countEmployees() == 8 : "Test failed for Jane";

        System.out.println("ALL TESTS PASSED!");
    }
}
